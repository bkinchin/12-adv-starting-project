{"ast":null,"code":"var _jsxFileName = \"/Users/wkinchin/Downloads/12-adv-starting-project/frontend/src/pages/EventPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventPage() {\n  _s();\n  const data = useLoaderData();\n  //   if (data.isError) {\n  //     return <p>{data.message}</p>;\n  //   }\n  const fetchedEvents = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: fetchedEvents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_s(EventPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventPage;\nexport default EventPage;\nexport const loader = async () => {\n  const response = await fetch(\"http://localhost:8080/eventsjkkj\");\n  if (!response.ok) {\n    //...\n    //return { isError: true, message: \"Could not fetch events.\" };\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events\",\n      status: 500\n    }));\n  } else {\n    //const resData = await response.json();\n    //return resData.events;\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventPage","_s","data","fetchedEvents","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["/Users/wkinchin/Downloads/12-adv-starting-project/frontend/src/pages/EventPage.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\n\nfunction EventPage() {\n  const data = useLoaderData();\n  //   if (data.isError) {\n  //     return <p>{data.message}</p>;\n  //   }\n  const fetchedEvents = data.events;\n\n  return <EventsList events={fetchedEvents} />;\n}\n\nexport default EventPage;\n\nexport const loader = async () => {\n  const response = await fetch(\"http://localhost:8080/eventsjkkj\");\n\n  if (!response.ok) {\n    //...\n    //return { isError: true, message: \"Could not fetch events.\" };\n    throw new Response(JSON.stringify({ message: \"Could not fetch events\", status: 500 }));\n  } else {\n    //const resData = await response.json();\n    //return resData.events;\n    return response;\n  }\n};\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,IAAI,GAAGN,aAAa,EAAE;EAC5B;EACA;EACA;EACA,MAAMO,aAAa,GAAGD,IAAI,CAACE,MAAM;EAEjC,oBAAOL,OAAA,CAACF,UAAU;IAACO,MAAM,EAAED;EAAc;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC9C;AAACP,EAAA,CARQD,SAAS;EAAA,QACHJ,aAAa;AAAA;AAAAa,EAAA,GADnBT,SAAS;AAUlB,eAAeA,SAAS;AAExB,OAAO,MAAMU,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;EAEhE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE,wBAAwB;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC,CAAC;EACxF,CAAC,MAAM;IACL;IACA;IACA,OAAOP,QAAQ;EACjB;AACF,CAAC;AAAC,IAAAF,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}