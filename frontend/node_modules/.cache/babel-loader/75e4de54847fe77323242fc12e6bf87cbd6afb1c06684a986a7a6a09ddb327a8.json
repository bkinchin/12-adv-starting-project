{"ast":null,"code":"var _jsxFileName = \"/Users/wkinchin/Downloads/12-adv-starting-project/frontend/src/pages/EventPage.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { Await, defer, json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  //   if (data.isError) {\n  //     return <p>{data.message}</p>;\n  //   }\n  // const fetchedEvents = data.events;\n\n  // return <EventsList events={fetchedEvents} />;\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => {\n        console.log(loadedEvents);\n        /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(EventPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventPage;\nexport default EventPage;\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //...\n    //return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    // return json(\n    //   { message: \"Could not fetch events\" },\n    //   {\n    //     status: 500,\n    //   }\n    // );\n    throw json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    //console.log(\"hi\");\n    const resData = await response.json();\n    //console.log(resData.events);\n    return resData.events;\n    //return response;\n  }\n};\n\nexport const loader = () => {\n  return defer({\n    events: loadEvents()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["Suspense","Await","defer","json","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","console","log","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["/Users/wkinchin/Downloads/12-adv-starting-project/frontend/src/pages/EventPage.js"],"sourcesContent":["import { Suspense } from \"react\";\nimport { Await, defer, json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\n\nfunction EventPage() {\n  const { events } = useLoaderData();\n  //   if (data.isError) {\n  //     return <p>{data.message}</p>;\n  //   }\n  // const fetchedEvents = data.events;\n\n  // return <EventsList events={fetchedEvents} />;\n  return (\n    <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\n      <Await resolve={events}>\n        {(loadedEvents) => {\n          console.log(loadedEvents);\n          <EventsList events={loadedEvents} />;\n        }}\n      </Await>\n    </Suspense>\n  );\n}\n\nexport default EventPage;\n\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    //...\n    //return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    // return json(\n    //   { message: \"Could not fetch events\" },\n    //   {\n    //     status: 500,\n    //   }\n    // );\n    throw json(\n      { message: \"Could not fetch events\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    //console.log(\"hi\");\n    const resData = await response.json();\n    //console.log(resData.events);\n    return resData.events;\n    //return response;\n  }\n};\n\nexport const loader = () => {\n  return defer({\n    events: loadEvents(),\n  });\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAO,CAAC,GAAGN,aAAa,EAAE;EAClC;EACA;EACA;EACA;;EAEA;EACA,oBACEG,OAAA,CAACP,QAAQ;IAACW,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;IAAAJ,QAAA,eACpEP,OAAA,CAACN,KAAK;MAACkB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACnBM,YAAY,IAAK;QACjBC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;QACzB,aAAAb,OAAA,CAACF,UAAU;UAACK,MAAM,EAAEU;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEf;AAACT,EAAA,CAlBQD,SAAS;EAAA,QACGJ,aAAa;AAAA;AAAAmB,EAAA,GADzBf,SAAS;AAoBlB,eAAeA,SAAS;AAExB,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMxB,IAAI,CACR;MAAEyB,OAAO,EAAE;IAAyB,CAAC,EACrC;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL;IACA,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACtB,IAAI,EAAE;IACrC;IACA,OAAO2B,OAAO,CAACpB,MAAM;IACrB;EACF;AACF,CAAC;;AAED,OAAO,MAAMqB,MAAM,GAAGA,CAAA,KAAM;EAC1B,OAAO7B,KAAK,CAAC;IACXQ,MAAM,EAAEc,UAAU;EACpB,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}